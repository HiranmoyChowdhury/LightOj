#include<bits/stdc++.h>
#define bst           ios_base::sync_with_stdio(0);
#define bug(x)        cerr<<#x<<'='<<x<<endl;
#define lp(i,a,b)     for(int i=a; i<=b; i++)
#define ll            long long int
#define eb            emplace_back
#define pb            push_back
#define inp(n)        scanf("%lld", &n);
using namespace std;
ll sum[400005], carry[400005];
void update(ll n, ll l, ll r, ll a, ll b, ll value){
    if(r<a || l>b) return;
    if(l>=a && r<=b){
        carry[n]=value;
        return;
    }
    ll mid=(l+r)/2, n1=n+n, n2=n+n+1;
    update(n1, l, mid, a, b, value);
    update(n2, mid+1, r, a, b, value);
    
    ll keep=carry[n];
    carry[n]=-1;
    if(keep>=0){
        if(a>l) update(n, l, r, l, a-1, keep);
        if(b<r) update(n, l, r, b+1, r, keep);
    }
    sum[n]=0;
    if(carry[n1]==-1) sum[n]+=sum[n1];
    else sum[n]+=carry[n1]*(mid-l+1);
    
    if(carry[n2]==-1) sum[n]+=sum[n2];
    else sum[n]+=carry[n2]*(r-mid);
}
ll query(ll n, ll l, ll r, ll a, ll b){
    if(r<a || l>b) return 0;
    if(l>=a && r<=b){
        ll x;
        if(carry[n]>=0) x=(r-l+1)*carry[n];
        else x=sum[n];
        return x;
    }
    ll mid=(l+r)/2, n1=n+n, n2=n+n+1;
    ll lo=max(l, a), hi=min(r, b);
    if(carry[n]>=0){
        ll x=((hi-lo+1)*carry[n]);
        return x;
    }
    ll x=query(n1, l, mid, a, b)+query(n2, mid+1, r, a, b);
    return x;
}
int main(){
    ll t;
    scanf("%lld", &t);
    for(ll cas=1; cas<=t; cas++){
        ll n, q, i, j, k;
        scanf("%lld %lld", &n, &q);
        for(i=0; i<=4*n; i++) carry[i]=-1, sum[i]=0;
        printf("Case %lld:\n", cas);
        while(q--){
            inp(k)
            ll l, r, v;
            if(k==1){
                scanf("%lld %lld %lld", &l, &r, &v);
                update(1, 0, n, l, r, v);
            }
            else{
                scanf("%lld %lld" , &l, &r);
                ll ans1=query(1, 0, n, l, r);
                ll ans2=r-l+1;
                ll g=__gcd(ans1, ans2);
                ans1/=g; ans2/=g;
                if(ans2==1) printf("%lld\n", ans1);
                else printf("%lld/%lld\n", ans1, ans2);
            }
        }
    }
    return 0;
}
